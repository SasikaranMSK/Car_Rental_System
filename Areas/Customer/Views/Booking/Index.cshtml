@model IEnumerable<CarRentalSystemSeparation.Areas.Customer.DTOs.BookingListDTO>
@{
    ViewData["Title"] = "My Bookings";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container my-5">
    <div class="row mb-4">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center">
                <div>
                    <h1 class="display-5 fw-bold text-primary mb-2">My Bookings</h1>
                    <p class="text-muted">Manage your vehicle reservations</p>
                </div>
                <a class="btn btn-primary" asp-controller="Home" asp-action="Vehicles" asp-area="">
                    <i class="bi bi-plus-circle me-2"></i>New Booking
                </a>
            </div>
        </div>
    </div>

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            <i class="bi bi-check-circle me-2"></i>@TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <i class="bi bi-exclamation-triangle me-2"></i>@TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    <div class="row">
        @if (Model.Any())
        {
            @foreach (var booking in Model)
            {
                <div class="col-lg-6 mb-4">
                    <div class="card booking-card shadow-sm">
                        <div class="row g-0">
                            <div class="col-md-4">
                                <img src="@booking.VehicleImageUrl" class="img-fluid rounded-start h-100" 
                                     alt="@booking.VehicleName" style="object-fit: cover;">
                            </div>
                            <div class="col-md-8">
                                <div class="card-body">
                                    <div class="d-flex justify-content-between align-items-start mb-2">
                                        <h5 class="card-title">@booking.VehicleName</h5>
                                        <span class="badge bg-@(GetStatusBadgeClass(booking.Status)) fs-6">
                                            @booking.Status
                                        </span>
                                    </div>
                                    <div class="mb-3">
                                        <div class="row text-sm">
                                            <div class="col-6">
                                                <small class="text-muted d-block">Pickup</small>
                                                <strong>@booking.PickupDate.ToString("MMM dd, yyyy")</strong>
                                            </div>
                                            <div class="col-6">
                                                <small class="text-muted d-block">Return</small>
                                                <strong>@booking.ReturnDate.ToString("MMM dd, yyyy")</strong>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="d-flex justify-content-between align-items-center">
                                        <div>
                                            <span class="h6 text-primary mb-0">$@booking.TotalAmount</span>
                                            <small class="text-muted d-block">@booking.TotalDays day(s)</small>
                                        </div>
                                        <div class="btn-group">
                                            <a href="@Url.Action("Details", new { id = booking.Id })" 
                                               class="btn btn-outline-primary btn-sm">
                                                <i class="bi bi-eye me-1"></i>Details
                                            </a>
                                            @if (booking.Status == CarRentalSystemSeparation.Common.Enums.BookingStatus.Pending)
                                            {
                                                <button type="button" class="btn btn-outline-danger btn-sm" 
                                                        onclick="cancelBooking(@booking.Id)">
                                                    <i class="bi bi-x-circle me-1"></i>Cancel
                                                </button>
                                            }
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        }
        else
        {
            <div class="col-12">
                <div class="text-center py-5">
                    <i class="bi bi-calendar-x text-muted" style="font-size: 4rem;"></i>
                    <h3 class="mt-3 text-muted">No bookings found</h3>
                    <p class="text-muted">You haven't made any vehicle reservations yet.</p>
                    <a class="btn btn-primary" asp-controller="Home" asp-action="Vehicles" asp-area="">
                        <i class="bi bi-car-front me-2"></i>Browse Vehicles
                    </a>
                </div>
            </div>
        }
    </div>
</div>

<!-- Cancel Booking Modal -->
<div class="modal fade" id="cancelModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Cancel Booking</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to cancel this booking? This action cannot be undone.</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Keep Booking</button>
                <form id="cancelForm" method="post" style="display: inline;">
                    @Html.AntiForgeryToken()
                    <button type="submit" class="btn btn-danger">
                        <i class="bi bi-x-circle me-1"></i>Cancel Booking
                    </button>
                </form>
            </div>
        </div>
    </div>
</div>

@functions {
    private string GetStatusBadgeClass(CarRentalSystemSeparation.Common.Enums.BookingStatus status)
    {
        return status switch
        {
            CarRentalSystemSeparation.Common.Enums.BookingStatus.Pending => "warning",
            CarRentalSystemSeparation.Common.Enums.BookingStatus.Confirmed => "success",
            CarRentalSystemSeparation.Common.Enums.BookingStatus.Cancelled => "danger",
            CarRentalSystemSeparation.Common.Enums.BookingStatus.Completed => "info",
            _ => "secondary"
        };
    }
}

<script>
    function cancelBooking(bookingId) {
        const modal = new bootstrap.Modal(document.getElementById('cancelModal'));
        const form = document.getElementById('cancelForm');
        form.action = '@Url.Action("Cancel")/' + bookingId;
        modal.show();
    }
</script>

<style>
    .booking-card {
        transition: transform 0.2s ease, box-shadow 0.2s ease;
    }

    .booking-card:hover {
        transform: translateY(-2px);
        box-shadow: 0 8px 25px rgba(0,0,0,0.15);
    }
</style>
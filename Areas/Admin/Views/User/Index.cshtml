@model IEnumerable<CarRentalSystemSeparation.Areas.Admin.DTOs.UserDTO>
@{
    ViewData["Title"] = "User Management";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container my-5">
    <div class="row mb-4">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center">
                <div>
                    <h1 class="display-5 fw-bold text-primary mb-2">User Management</h1>
                    <p class="text-muted">Manage system users and their roles</p>
                </div>
                <a class="btn btn-primary" asp-action="Create">
                    <i class="bi bi-person-plus me-2"></i>Add New User
                </a>
            </div>
        </div>
    </div>

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            <i class="bi bi-check-circle me-2"></i>@TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    <div class="card shadow-sm">
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-hover">
                    <thead class="table-primary">
                        <tr>
                            <th>Name</th>
                            <th>Email</th>
                            <th>Role</th>
                            <th>Status</th>
                            <th>Created</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var user in Model)
                        {
                            <tr>
                                <td>
                                    <div class="d-flex align-items-center">
                                        <div class="avatar-circle me-3">
                                            @user.FirstName.Substring(0, 1).ToUpper()
                                        </div>
                                        <div>
                                            <div class="fw-bold">@user.FullName</div>
                                        </div>
                                    </div>
                                </td>
                                <td>@user.Email</td>
                                <td>
                                    <span class="badge bg-@(GetRoleBadgeClass(user.Role))">
                                        @user.Role
                                    </span>
                                </td>
                                <td>
                                    <span class="badge bg-@(user.IsActive ? "success" : "danger")">
                                        @(user.IsActive ? "Active" : "Inactive")
                                    </span>
                                </td>
                                <td>@user.CreatedAt.ToString("MMM dd, yyyy")</td>
                                <td>
                                    <div class="btn-group">
                                        <a href="@Url.Action("Details", new { id = user.Id })" 
                                           class="btn btn-outline-primary btn-sm">
                                            <i class="bi bi-eye"></i>
                                        </a>
                                        <a href="@Url.Action("Edit", new { id = user.Id })" 
                                           class="btn btn-outline-warning btn-sm">
                                            <i class="bi bi-pencil"></i>
                                        </a>
                                        <button type="button" class="btn btn-outline-danger btn-sm" 
                                                onclick="deleteUser(@user.Id, '@user.FullName')">
                                            <i class="bi bi-trash"></i>
                                        </button>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<!-- Delete User Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Delete User</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete <strong id="userName"></strong>?</p>
                <p class="text-danger">This action cannot be undone.</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <form id="deleteForm" method="post" style="display: inline;">
                    @Html.AntiForgeryToken()
                    <button type="submit" class="btn btn-danger">
                        <i class="bi bi-trash me-1"></i>Delete User
                    </button>
                </form>
            </div>
        </div>
    </div>
</div>

@functions {
    private string GetRoleBadgeClass(CarRentalSystemSeparation.Common.Enums.UserRole role)
    {
        return role switch
        {
            CarRentalSystemSeparation.Common.Enums.UserRole.SuperAdmin => "danger",
            CarRentalSystemSeparation.Common.Enums.UserRole.Admin => "warning",
            CarRentalSystemSeparation.Common.Enums.UserRole.Customer => "primary",
            CarRentalSystemSeparation.Common.Enums.UserRole.Guest => "secondary",
            _ => "secondary"
        };
    }
}

<script>
    function deleteUser(userId, userName) {
        const modal = new bootstrap.Modal(document.getElementById('deleteModal'));
        const form = document.getElementById('deleteForm');
        const userNameElement = document.getElementById('userName');
        
        form.action = '@Url.Action("Delete")/' + userId;
        userNameElement.textContent = userName;
        modal.show();
    }
</script>

<style>
    .avatar-circle {
        width: 40px;
        height: 40px;
        border-radius: 50%;
        background: linear-gradient(45deg, #2563eb, #1e40af);
        color: white;
        display: flex;
        align-items: center;
        justify-content: center;
        font-weight: bold;
    }
</style>